/* 
	*
	*
	jAlert v.3
	Made with love by Versatility Werks (http://flwebsites.biz)
	MIT Licensed
	*
	*
*/
!(function (t) {
	var e = {};Date.now || (Date.now = function () {
		return +new Date();
	}), t.fn.jAlert = function (i) {
		var o = ["default", "green", "red", "black", "blue", "yellow"],
		    n = ["xsm", "sm", "md", "lg", "xlg", "full"],
		    s = ["white", "black"],
		    r = [],
		    l = ["animated"],
		    a = [];if (this.length > 1) return this.each(function () {
			t(this).jAlert(i);
		}), this;if ((i = t.extend({}, t.fn.jAlert.defaults, i), i.id)) var c = i.id;else var h = Date.now().toString() + Math.floor(1e5 * Math.random()),
		    c = "ja_" + h;if ((e[c] = {}, thisAlert = e[c], thisAlert.options = i, thisAlert.options.id = c, thisAlert.instance = !1, "confirm" == thisAlert.options.type && (thisAlert.options.content || (thisAlert.options.content = thisAlert.options.confirmQuestion), thisAlert.options.btns = [{ text: thisAlert.options.confirmBtnText, theme: "green", "class": "confirmBtn", closeAlert: !0, onClick: thisAlert.options.onConfirm }, { text: thisAlert.options.denyBtnText, theme: "red", "class": "denyBtn", closeAlert: !0, onClick: thisAlert.options.onDeny }], thisAlert.options.autofocus = thisAlert.options.confirmAutofocus), -1 == t.inArray(thisAlert.options.theme, o))) return console.log("jAlert Config Error: Invalid theme selection."), !1;if ((l.push("ja_" + thisAlert.options.theme), thisAlert.options["class"] && l.push(thisAlert.options["class"]), thisAlert.options.classes && l.push(thisAlert.options.classes), thisAlert.options.title || l.push("ja_noTitle"), thisAlert.options.size && ("string" == typeof thisAlert.options.size && -1 == t.inArray(thisAlert.options.size, n) || "object" == typeof thisAlert.options.size && ("undefined" == typeof thisAlert.options.size.width || "undefined" == typeof thisAlert.options.size.height)))) return console.log("jAlert Config Error: Invalid size selection (try a preset or make sure you're including height and width in your size object)."), !1;if ((thisAlert.options.size ? "object" == typeof thisAlert.options.size ? (r.push("width: " + thisAlert.options.size.width + ";"), r.push("height: " + thisAlert.options.size.height + ";")) : l.push("ja_" + thisAlert.options.size) : l.push("ja_sm"), -1 == t.inArray(thisAlert.options.backgroundColor, s))) return console.log("jAlert Config Error: Invalid background color selection."), !1;a.push("ja_wrap_" + thisAlert.options.backgroundColor), ("object" == typeof thisAlert.options.btns || "array" == typeof thisAlert.options.btns || thisAlert.options.autofocus) && (thisAlert.options.closeOnClick = !1), thisAlert.options.onOpen = [thisAlert.options.onOpen];var d = "onload='$.fn.jAlert.mediaLoaded($(this))'",
		    p = "<div class='ja_loader'>Loading...</div>";thisAlert.options.image ? (thisAlert.options.content = "<div class='ja_media_wrap'>" + p + "<img src='" + thisAlert.options.image + "' class='ja_img' " + d + "'", thisAlert.options.imageWidth && (thisAlert.options.content += " style='width: " + thisAlert.options.imageWidth + "'"), thisAlert.options.content += "></div>") : thisAlert.options.video ? (thisAlert.options.content = "<div class='ja_media_wrap'>" + p + "<div class='ja_video'></div></div>", thisAlert.options.onOpen.unshift(function () {
			var e = document.createElement("iframe");e.src = thisAlert.options.video, e.addEventListener ? e.addEventListener("load", function () {
				t.fn.jAlert.mediaLoaded(t(this));
			}, !0) : e.attachEvent ? e.attachEvent("onload", function () {
				t.fn.jAlert.mediaLoaded(t(this));
			}) : e.onload = function () {
				t.fn.jAlert.mediaLoaded(t(this));
			}, thisAlert.find(".ja_video").append(e);
		})) : thisAlert.options.iframe ? (thisAlert.options.iframeHeight || (thisAlert.options.iframeHeight = .9 * t(window).height() + "px"), thisAlert.options.content = "<div class='ja_media_wrap'>" + p + "</div>", thisAlert.options.onOpen.unshift(function () {
			var e = document.createElement("iframe");e.src = thisAlert.options.iframe, e.height = thisAlert.options.iframeHeight, e.className = "ja_iframe", e.addEventListener ? e.addEventListener("load", function () {
				t.fn.jAlert.mediaLoaded(t(this));
			}, !0) : e.attachEvent ? e.attachEvent("onload", function () {
				t.fn.jAlert.mediaLoaded(t(this));
			}) : e.onload = function () {
				t.fn.jAlert.mediaLoaded(t(this));
			}, thisAlert.find(".ja_media_wrap").append(e);
		})) : thisAlert.options.ajax && (thisAlert.options.content = "<div class='ja_media_wrap'>" + p + "</div>", onAjaxCallbacks = thisAlert.options.onOpen, thisAlert.options.onOpen = [function (e) {
			t.ajax(thisAlert.options.ajax, { async: !0, complete: function (i) {
					thisAlert.find(".ja_media_wrap").replaceWith(i.responseText), t.each(onAjaxCallbacks, function (t, i) {
						i(e);
					});
				}, error: function (t) {
					thisAlert.options.onAjaxFail(e, "Error getting content: Code: " + t.status + " : Msg: " + t.statusText);
				} });
		}]), this.centerAlert = function () {
			var e = t(window).height(),
			    i = thisAlert.instance.height(),
			    o = e - i,
			    n = o / 2;n > 200 && (n -= 100), 0 >= n && (n = 0), thisAlert.instance.css("margin-top", n + "px"), t("body").css("overflow", "hidden"), o > 5 ? thisAlert.instance.parents(".ja_wrap").css("position", "fixed") : (thisAlert.instance.parents(".ja_wrap").css("position", "absolute"), t("html, body").animate({ scrollTop: n - 50 }, 200));
		};var A = function (t, i) {
			"hide" == t ? i.removeClass(e[i.attr("id")].options.showAnimation).addClass(e[i.attr("id")].options.hideAnimation) : (i.centerAlert(), i.addClass(e[i.attr("id")].options.showAnimation).removeClass(e[i.attr("id")].options.hideAnimation).show());
		},
		    f = function (e) {
			if (("undefined" == typeof e.href && (e.href = ""), "undefined" == typeof e["class"] && (e["class"] = ""), e["class"] += "undefined" == typeof e.theme ? " ja_btn_default" : " ja_btn_" + e.theme, "undefined" == typeof e.text && (e.text = ""), "undefined" == typeof e.id)) {
				var i = Date.now().toString() + Math.floor(1e5 * Math.random());e.id = "ja_btn_" + i;
			}return "undefined" == typeof e.target && (e.target = "_self"), "undefined" == typeof e.closeAlert && (e.closeAlert = !0), t("body").on("click", "#" + e.id, function (i) {
				var o = t(this);e.closeAlert && o.parents(".jAlert").closeAlert();var n = !0;return "function" == typeof e.onClick && (n = e.onClick(i, o)), !n || e.closeAlert ? (i.preventDefault(), !1) : n;
			}), "<a href='" + e.href + "' id='" + e.id + "' target='" + e.target + "' class='ja_btn " + e["class"] + "'>" + e.text + "</a> ";
		};this.closeAlert = function (i, o) {
			var n = t(this);return 0 != i && (i = !0), n.length && (n.unbind("DOMSubtreeModified"), A("hide", n), window.setTimeout(function () {
				var s = n.parents(".ja_wrap");i ? s.remove() : s.hide(), "function" == typeof o ? o(n) : "function" == typeof e[n.attr("id")].options.onClose && e[n.attr("id")].options.onClose(n), t(".jAlert").length > 0 ? t(".jAlert:last").centerAlert() : t("body").css("overflow", "auto");
			}, e[n.attr("id")].options.animationTimeout)), this;
		}, this.showAlert = function (i, o, n, s) {
			var r = t(this);0 != i && (i = !0), o !== !1 && (o = !0), i && t(".jAlert:visible").closeAlert(o);var l = r.parents(".ja_wrap");t("body").append(l), A("show", r), "function" == typeof s && (e[r.attr("id")].options.onClose = s), window.setTimeout(function () {
				"function" == typeof n && n(r);
			}, e[r.attr("id")].options.animationTimeout);
		};var u = function (e) {
			var i = "";i += '<div class="ja_wrap ' + a.join(" ") + '"><div class="jAlert ' + l.join(" ") + '" style="' + r.join(" ") + '" id="' + thisAlert.options.id + '"><div>', thisAlert.options.closeBtn && (i += "<div class='closejAlert ja_close", thisAlert.options.closeBtnAlt && (i += " ja_close_alt"), i += "'>X</div>"), thisAlert.options.title && (i += "<div class='ja_title'><div>" + thisAlert.options.title + "</div></div>"), i += '<div class="ja_body">' + e, thisAlert.options.btns && (i += '<div class="ja_btn_wrap ', thisAlert.options.btnBackground && (i += "optBack"), i += '">'), "object" == typeof thisAlert.options.btns[0] ? t.each(thisAlert.options.btns, function (t, e) {
				"object" == typeof e && (i += f(e));
			}) : "object" == typeof thisAlert.options.btns ? i += f(thisAlert.options.btns) : thisAlert.options.btns && console.log("jAlert Config Error: Incorrect value for btns (must be object or array of objects): " + thisAlert.options.btns), thisAlert.options.btns && (i += "</div>"), i += "</div></div></div></div>";var o = t(i);return thisAlert.options.replaceOtherAlerts && t(".jAlert:visible").closeAlert(), t("body").append(o), thisAlert.instance = t("#" + thisAlert.options.id), A("show", thisAlert.instance), thisAlert.options.closeBtn && thisAlert.instance.on("click", ".closejAlert", function (e) {
				return e.preventDefault(), t(this).parents(".jAlert").closeAlert(), !1;
			}), thisAlert.options.closeOnClick && (t(document).off("mouseup", t.fn.jAlert.onMouseUp), t(document).on("mouseup", t.fn.jAlert.onMouseUp)), thisAlert.options.closeOnEsc && (t(document).off("keydown", t.fn.jAlert.onEscKeyDown), t(document).on("keydown", t.fn.jAlert.onEscKeyDown)), thisAlert.options.onOpen && t.each(thisAlert.options.onOpen, function (t, e) {
				e(thisAlert.instance);
			}), thisAlert.options.autofocus ? thisAlert.instance.find(thisAlert.options.autofocus).focus() : thisAlert.instance.focus(), thisAlert.instance.bind("DOMSubtreeModified", function () {
				thisAlert.instance.centerAlert();
			}), thisAlert.instance;
		};return this.initialize = function () {
			return thisAlert.options.content || thisAlert.options.image || thisAlert.options.video || thisAlert.options.iframe || thisAlert.options.ajax ? (thisAlert.options.content || (thisAlert.options.content = ""), u(thisAlert.options.content)) : (console.log("jAlert potential error: No content defined"), u(""));
		}, this.initialize(), this;
	}, t.fn.jAlert.defaults = { title: !1, content: !1, image: !1, imageWidth: "auto", video: !1, ajax: !1, onAjaxFail: function (t, e) {
			thisAlert.closeAlert(), errorAlert(e);
		}, iframe: !1, iframeHeight: !1, "class": "", classes: "", id: !1, showAnimation: "fadeInUp", hideAnimation: "fadeOutDown", animationTimeout: 600, theme: "default", backgroundColor: "black", size: !1, replaceOtherAlerts: !1, closeOnClick: !1, closeOnEsc: !0, closeBtn: !0, closeBtnAlt: !1, btns: !1, btnBackground: !0, autofocus: !1, onOpen: function () {
			return !1;
		}, onClose: function () {
			return !1;
		}, type: "modal", confirmQuestion: "Are you sure?", confirmBtnText: "Yes", denyBtnText: "No", confirmAutofocus: ".confirmBtn", onConfirm: function (t) {
			return t.preventDefault(), console.log("confirmed"), !1;
		}, onDeny: function (t) {
			return t.preventDefault(), !1;
		} }, t.fn.jAlert.onMouseUp = function () {
		var i = t(".jAlert:visible:last");e[i.attr("id")].options.closeOnClick && i.closeAlert();
	}, t.fn.jAlert.onEscKeyDown = function (i) {
		if (27 === i.keyCode) {
			var o = t(".jAlert:visible:last");e[o.attr("id")].options.closeOnEsc && o.closeAlert();
		}
	}, t.jAlert = function (e) {
		return t.fn.jAlert(e);
	}, t.fn.alertOnClick = function (e) {
		t(this).on("click", function (i) {
			return i.preventDefault(), t.jAlert(e), !1;
		});
	}, t.alertOnClick = function (e, i) {
		t("body").on("click", e, function (e) {
			return e.preventDefault(), t.jAlert(i), !1;
		});
	};var i;t(window).resize(function () {
		window.clearTimeout(i), i = window.setTimeout(function () {
			t(".jAlert:visible").each(function () {
				t(this).centerAlert();
			});
		}, 200);
	}), t.fn.jAlert.mediaLoaded = function (t) {
		var e = t.parents(".ja_media_wrap"),
		    i = e.find(".ja_video");e.find(".ja_loader").remove(), i.length > 0 ? i.fadeIn("fast") : t.fadeIn("fast"), t.parents(".jAlert").centerAlert();
	};
})(jQuery);