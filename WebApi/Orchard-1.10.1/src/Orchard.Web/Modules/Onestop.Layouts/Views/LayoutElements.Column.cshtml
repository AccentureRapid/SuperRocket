@using Onestop.Layouts.Helpers
@{
    List<dynamic> elements = ((IEnumerable<dynamic>)Model.Elements).ToList();
    if (elements.Any()) {
        Model.Classes.Add("layout-element");
        Model.Classes.Add("layout-element-column");
        Model.Classes.Add((string) Model.CssClass ?? "");

        //Below functionality is not flexible enough, it will need some rework to allow multiple col and break in CssClass 
        var defaultCol = "col-" + Model.BreakOn + "-" + Model.Span.ToString();
        if (!Model.Classes.Contains(defaultCol)) //<- check to makesure its not already added in Model.CssClass
        { 
            Model.Classes.Add(defaultCol);
        }
        if (Model.Offset > 0)
        {
            var defaultOffset = "col-" + Model.BreakOn + "-offset-" + Model.Offset.ToString();
            if (Model.Classes.Contains(defaultOffset)) //<- check to makesure its not already added in Model.CssClass
            {
                Model.Classes.Add(defaultOffset);                
            }
        }
        
        var styles = new Dictionary<string, string>();
        if (Model.Width != null && Model.Width.Value > 0) {
            styles.Add("width", Model.Width.ToString());
        }
        Model.Attributes["style"] = styles.BuildStyle();
        var tag = Tag(Model, "div");
        @tag.StartElement
        @Display.ChildLayoutElements(Elements: Model.Elements, DisplayType: Model.Metadata.DisplayType, ParentShape: Model)
        @tag.EndElement
    }
}