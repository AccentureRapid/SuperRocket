(function (a) {
	a.ias = function (g) {
		function e() { a(b.pagination).hide(); b.scrollContainer.scroll(f) } function f() { scrTop = b.scrollContainer == a.ias.defaults.scrollContainer ? b.scrollContainer.scrollTop() : b.scrollContainer.offset().top; wndHeight = b.scrollContainer.height(); curScrOffset = scrTop + wndHeight; curScrOffset >= d() && k(curScrOffset) } function c() { b.scrollContainer.unbind("scroll", f) } function d(d) {
			el = a(b.container).find(b.item).last(); if (0 == el.size()) return 0; treshold = el.offset().top + el.height(); d || (treshold +=
			b.tresholdMargin); return treshold
		} function k(d, f) {
			urlNextPage = a(b.next).attr("href"); if (!urlNextPage) return b.noneleft && a(b.container).find(b.item).last().after(b.noneleft), c(); if (!(b.beforePageChange && a.isFunction(b.beforePageChange) && !1 === b.beforePageChange(d, urlNextPage))) {
				j.pushPages(d, urlNextPage); c(); loader = l(); !1 !== b.customLoaderProc ? b.customLoaderProc(loader) : (el = a(b.container).find(b.item).last(), el.after(loader), loader.fadeIn()); var g = function (d, c) {
					result = b.onLoadItems.call(this, c); !1 !==
					result && (a(c).hide(), curLastItem = a(b.container).find(b.item).last(), curLastItem.after(c), a(c).fadeIn()); a(b.pagination).replaceWith(a(b.pagination, d)); loader = l(); loader.remove(); e(); b.onRenderComplete.call(this, c); f && f.call(this)
				}, h = []; a.get(urlNextPage, null, function (d) { container = a(b.container, d).eq(0); 0 == container.length && (container = a(d).filter(b.container).eq(0)); container && container.find(b.item).each(function () { h.push(this) }); g && g.call(this, d, h) }, "html")
			}
		} function m(b) {
			curTreshold = d(!0); 0 < curTreshold &&
			k(curTreshold, function () { c(); j.getCurPageNum(curTreshold) + 1 < b ? (m(b), a("html,body").animate({ scrollTop: curTreshold }, 400, "swing")) : (a("html,body").animate({ scrollTop: curTreshold }, 1E3, "swing"), e()) })
		} function l() { loader = a(".ias_loader"); 0 == loader.size() && (loader = a("<div class='ias_loader'>" + b.loader + "</div>"), loader.hide()); return loader } var b = a.extend({}, a.ias.defaults, g); g = new a.ias.util; var j = new a.ias.paging(b.scrollContainer), h = b.history ? new a.ias.history : !1; j.onChangePage(function (a, d, c) {
			h && h.setPage(a,
			c); b.onPageChange.call(this, a, c, d)
		}); e(); h && h.havePage() && (c(), pageNum = h.getPage(), g.forceScrollTop(function () { 1 < pageNum ? (m(pageNum), curTreshold = d(!0), a("html,body").scrollTop(curTreshold)) : e() }))
	}; a.ias.defaults = {
		container: "#container", scrollContainer: a(window), item: ".item", pagination: "#pagination", next: ".next", noneleft: !1, loader: '<img src="../styles/images/loader.gif"/>', tresholdMargin: 0, history: !0, onPageChange: function () { }, beforePageChange: function () { }, onLoadItems: function () { }, onRenderComplete: function () { },
		customLoaderProc: !1
	}; a.ias.util = function () { var g = !1, e = !1, f = this; a(window).load(function () { g = !0 }); this.forceScrollTop = function (c) { a("html,body").scrollTop(0); e || (g ? (c.call(), e = !0) : setTimeout(function () { f.forceScrollTop(c) }, 1)) } }; a.ias.paging = function () {
		function g(a) { for (i = e.length - 1; 0 < i; i--) if (a > e[i][0]) return i + 1; return 1 } var e = [[0, document.location.toString()]], f = function () { }, c = 1; a(window).scroll(function () {
			scrTop = a(window).scrollTop(); wndHeight = a(window).height(); curScrOffset = scrTop + wndHeight; curPageNum =
			g(curScrOffset); a: { var d = curScrOffset; for (i = e.length - 1; 0 <= i; i--) if (d > e[i][0]) { curPagebreak = e[i]; break a } curPagebreak = null } c != curPageNum && f.call(this, curPageNum, curPagebreak[0], curPagebreak[1]); c = curPageNum
		}); this.getCurPageNum = function (a) { return g(a) }; this.onChangePage = function (a) { f = a }; this.pushPages = function (a, c) { e.push([a, c]) }
	}; a.ias.history = function () {
		var a = !1, e = !1, e = !(!window.history || !history.pushState || !history.replaceState), e = !1; this.setPage = function (a, c) { this.updateState({ page: a }, "", c) }; this.havePage =
		function () { return !1 != this.getState() }; this.getPage = function () { return this.havePage() ? (stateObj = this.getState(), stateObj.page) : 1 }; this.getState = function () { if (e) { if ((stateObj = history.state) && stateObj.ias) return stateObj.ias } else if (haveState = "#/page/" == window.location.hash.substring(0, 7)) return pageNum = parseInt(window.location.hash.replace("#/page/", "")), { page: pageNum }; return !1 }; this.updateState = function (e, c, d) { a ? this.replaceState(e, c, d) : this.pushState(e, c, d) }; this.pushState = function (f, c, d) {
			e ? history.pushState({ ias: f },
			c, d) : (hash = 0 < f.page ? "#/page/" + f.page : "", window.location.hash = hash); a = !0
		}; this.replaceState = function (a, c, d) { e ? history.replaceState({ ias: a }, c, d) : this.pushState(a, c, d) }
	}
})(jQuery);