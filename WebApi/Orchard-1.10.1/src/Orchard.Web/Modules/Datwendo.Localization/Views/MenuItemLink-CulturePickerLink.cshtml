@using Orchard.Utility.Extensions
@using Orchard.Mvc.Html
@using Orchard.Mvc.Extensions
@using System.Linq
@using Datwendo.Localization.ViewModels
@using Datwendo.Localization.Models

@model dynamic

@{
    MenuCulturePickerPart CPart     = Model.Content.MenuCulturePickerPart;
    var shp                         = BuildDisplay(CPart);
    var shape1                      = ((IEnumerable<dynamic>)shp.Content.Items).Where(c => c.ContentPart is MenuCulturePickerPart).SingleOrDefault();
    var cList                       = shape1.Cultures as IEnumerable<CookieCultureItemViewModel> ?? new CookieCultureItemViewModel[0];
    var cultures                    = cList.Where(c => (c.CultureItem != null) && (c.CultureItem.Culture != null)).OrderBy(c => c.IsBrowser).ThenBy(c => c.CultureItem.Culture);
    var CurrentCulture = shape1.CurrentCulture;
}
<a href="#" class="dropdown-toggle" data-toggle="dropdown">
    <span class="glyphicon glyphicon-globe"></span>
    @CurrentCulture
    <b class="caret"></b>
</a>
<ul class="dropdown-menu dropdown-culture-selector">
    @foreach (var c in cultures)
    {
        var active = (c.Current) ? "class=active" : string.Empty;
        if (c.IsBrowser)
        {
            <li class="divider"></li>
            <li @active><a href="@Url.Action("ResetCulture", "CookieCulture", new { Area = "Datwendo.Localization", returnUrl = c.ReturnUrl })">@T("Browser")-@c.CultureItem.LocalizedName</a></li>
        }
        else
        {
            var url1 = Url.Action("SetCulture", "CookieCulture", new { Area = "Datwendo.Localization", culture = c.CultureItem.Culture.ToLower(), returnUrl = c.ReturnUrl });
            <li @active><a href="@url1">@c.CultureItem.LocalizedName</a></li>
        }
    }
</ul>

